version: '3'
services:

  deluge:
    image: kabe0/deluge-windscribe:latest
    container_name: deluge
    restart: unless-stopped
    env_file: deluge.env
    volumes:
      - /srv/docker/deluge:/config
      - /data/downloads:/downloads
    ports:
      - 8112:8112
      - 58846:58846
    dns:
      - 8.8.8.8
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun

  emby:
    image: lscr.io/linuxserver/emby:latest
    container_name: emby
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /srv/docker/emby:/config
      - /data/media:/media
    ports:
      - 8096:8096
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
    ports:
      - 8191:8191
    restart: unless-stopped

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - AUTO_UPDATE=true
    volumes:
      - /srv/docker/jackett/config:/config
      - /srv/docker/jackett/downloads:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped

  ombi:
    image: lscr.io/linuxserver/ombi:latest
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /srv/docker/ombi:/config
    ports:
      - 3579:3579
    restart: unless-stopped

  proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: proxy-manager
    env_file: proxy-manager.env
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      DB_MYSQL_HOST: 'proxy-manager-db'
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: 'npm'
      DB_MYSQL_PASSWORD: "${PROXYMANAGER_PASSWORD}"
      DB_MYSQL_NAME: 'npm'
      DISABLE_IPV6: 'true'
    volumes:
      - /srv/docker/nginx_proxy_manager/data:/data
      - /srv/docker/nginx_proxy_manager/letsencrypt:/etc/letsencrypt

  proxy-manager-db:
    image: 'jc21/mariadb-aria:latest'
    container_name: proxy-manager-db
    env_file: proxy-manager.env
    environment:
      MYSQL_ROOT_PASSWORD: "${PROXYMANAGER_PASSWORD}"
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: "${PROXYMANAGER_PASSWORD}"
    volumes:
      - /srv/docker/nginx_proxy_manager/mysql:/var/lib/mysql

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /srv/docker/radarr:/config
      - /data/media/movies:/movies
      - /data/downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped

  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
    ports:
      - '8080:8080'
      - '8086:8086'
    volumes:
      - /run/udev:/run/udev:ro
      - /srv/docker/scrutiny/config:/opt/scrutiny/config
      - /srv/docker/scrutiny/influxdb:/opt/scrutiny/influxdb
    devices:
      - '/dev/sda'
      - '/dev/sdb'
      - '/dev/sdc'
      - '/dev/sdd'
      - '/dev/sde'
      - '/dev/sdf'

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /srv/docker/sonarr:/config
      - /data/media/tv:/tv
      - /data/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: steve-app-syncthing
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /srv/docker/syncthing:/config
      - /data:/data
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=true
      - WATCHTOWER_SCHEDULE=0 0 19 * * SUN
      - WATCHTOWER_TIMEOUT=1800s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
