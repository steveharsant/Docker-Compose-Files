version: '3.4'
services:

  deluge:
    image: kabe0/deluge-windscribe:latest
    container_name: deluge
    restart: unless-stopped
    environment:
      - VPN_USERNAME=${VPN_USERNAME}
      - VPN_PASSWORD=${VPN_PASSWORD}
      - VPN_LOCATION=${VPN_LOCATION}
    volumes:
      - /srv/docker/deluge:/config
      - /data/downloads:/downloads
    ports:
      - 8112:8112
      - 58846:58846
    dns:
      - 8.8.8.8
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun

  emby:
    image: lscr.io/linuxserver/emby:latest
    container_name: emby
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /srv/docker/emby:/config
      - /data/media:/media
    ports:
      - 8096:8096
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
    ports:
      - 8191:8191
    restart: unless-stopped

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - AUTO_UPDATE=true
    volumes:
      - /srv/docker/jackett/config:/config
      - /srv/docker/jackett/downloads:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped

  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: steve-app
    ports:
      - 19999:19999
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
    environment:
      - NETDATA_CLAIM_TOKEN=${NETDATA_CLAIM_TOKEN}
      - NETDATA_CLAIM_URL=https://app.netdata.cloud
      - NETDATA_CLAIM_ROOMS=

  ombi:
    image: lscr.io/linuxserver/ombi:latest
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /srv/docker/ombi:/config
    ports:
      - 3579:3579
    restart: unless-stopped

  proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: proxy-manager
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      DB_MYSQL_HOST: 'proxy-manager-db'
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: 'npm'
      DB_MYSQL_PASSWORD: "${PROXYMANAGER_PASSWORD}"
      DB_MYSQL_NAME: 'npm'
      DISABLE_IPV6: 'true'
    volumes:
      - /srv/docker/nginx_proxy_manager/data:/data
      - /srv/docker/nginx_proxy_manager/letsencrypt:/etc/letsencrypt
    restart: unless-stopped

  proxy-manager-db:
    image: 'jc21/mariadb-aria:latest'
    container_name: proxy-manager-db
    environment:
      MYSQL_ROOT_PASSWORD: "${PROXYMANAGER_PASSWORD}"
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: "${PROXYMANAGER_PASSWORD}"
    volumes:
      - /srv/docker/nginx_proxy_manager/mysql:/var/lib/mysql
    restart: unless-stopped

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/London
    volumes:
      - /srv/docker/radarr:/config
      - /data/media/movies:/movies
      - /data/downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped

  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
    ports:
      - '8080:8080'
      - '8086:8086'
    volumes:
      - /run/udev:/run/udev:ro
      - /srv/docker/scrutiny/config:/opt/scrutiny/config
      - /srv/docker/scrutiny/influxdb:/opt/scrutiny/influxdb
    devices:
      - '/dev/sda'
      - '/dev/sdb'
      # - '/dev/sdc'
      - '/dev/sdd'
      - '/dev/sde'
      - '/dev/sdf'
      - '/dev/sdg'
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=Europe/London
    volumes:
      - /srv/docker/sonarr:/config
      - /data/media/tv:/tv
      - /data/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: steve-app-syncthing
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /srv/docker/syncthing:/config
      - /data:/data
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped

  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
      - 8267:8267 # Internal node port
      - 8268:8268 # Extra node port
    environment:
      - TZ=Europe/London
      - PUID=1000
      - PGID=1000
      - UMASK_SET=002
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - nodeID=InternalNode
    volumes:
      - /srv/docker/tdarr/server:/app/server
      - /srv/docker/tdarr/config:/app/configs
      - /srv/docker/tdarr/logs:/app/logs
      - /mnt/lun1:/lun1
      - /mnt/lun2:/lun2
      - /mnt/hdd1:/hdd1
      # - /data/media:/media
      # - /data/media/movies/.tdarr_cache:/temp

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=true
      - WATCHTOWER_SCHEDULE=0 0 19 * * SUN
      - WATCHTOWER_TIMEOUT=1800s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  ytdl:
    image: tzahi12345/youtubedl-material:latest
    container_name: ytdl
    depends_on:
      - ytdl-db
    environment:
      - ALLOW_CONFIG_MUTATIONS='true'
      - ytdl_mongodb_connection_string='mongodb://ytdl-db:27017'
      - ytdl_use_local_db='false'
      - write_ytdl_config='true'
    volumes:
      - /srv/docker/ytdl/appdata:/app/appdata
      - /data/downloads/.ytdl/audio:/app/audio
      - /data/downloads/.ytdl/video:/app/video
      - /srv/docker/ytdl/subscriptions:/app/subscriptions
      - /srv/docker/ytdl/users:/app/users
    ports:
      - "8998:17442"
    restart: unless-stopped

  ytdl-db:
    image: mongo
    container_name: ytdl-db
    logging:
      driver: "none"
    volumes:
      - /srv/docker/ytdl/db/:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped

# Netdata volumes. Must be last.
volumes:
  netdataconfig:
  netdatalib:
  netdatacache:
